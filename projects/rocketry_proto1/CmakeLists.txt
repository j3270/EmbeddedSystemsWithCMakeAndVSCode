
include(../../tools/cmake_files/gccFlags.cmake)

set(ASSEMBLY_FILES 
)

set(SOURCES 
        ../../projects/rocketry_proto1/main.cpp
        ../../projects/rocketry_proto1/cmsis/source/gcc/startup_samd21.c
        ../../projects/rocketry_proto1/cmsis/source/gcc/system_samd21.c
        ../../xdk-asf-3.51.0/common/utils/interrupt/interrupt_sam_nvic.c
        ../../xdk-asf-3.51.0/common2/services/delay/sam0/systick_counter.c
        ../../xdk-asf-3.51.0/sam0/boards/samd21_adafruit_feather_m0_proto/board_init.c
        ../../xdk-asf-3.51.0/sam0/drivers/port/port.c
        ../../xdk-asf-3.51.0/sam0/drivers/system/system.c
        ../../xdk-asf-3.51.0/sam0/drivers/system/pinmux/pinmux.c
        ../../xdk-asf-3.51.0/sam0/drivers/system/interrupt/system_interrupt.c
        ../../xdk-asf-3.51.0/sam0/drivers/system/clock/clock_samd21_r21_da_ha1/clock.c
        ../../xdk-asf-3.51.0/sam0/drivers/system/clock/clock_samd21_r21_da_ha1/gclk.c
)

set(INCLUDE_DIRS 
        ../../projects/rocketry_proto1
        ../../projects/rocketry_proto1/cmsis/include
        ../../xdk-asf-3.51.0/common/boards
        ../../xdk-asf-3.51.0/common/utils
        ../../xdk-asf-3.51.0/common/utils/interrupt
        ../../xdk-asf-3.51.0/common2/services/delay
        ../../xdk-asf-3.51.0/common2/services/delay/sam0
        ../../xdk-asf-3.51.0/sam0/boards
        ../../xdk-asf-3.51.0/sam0/boards/samd21_adafruit_feather_m0_proto
        ../../xdk-asf-3.51.0/sam0/boards/samd21_adafruit_feather_m0_proto/board_config
        ../../xdk-asf-3.51.0/sam0/drivers/port
        ../../xdk-asf-3.51.0/sam0/drivers/system
        ../../xdk-asf-3.51.0/sam0/drivers/system/clock
        ../../xdk-asf-3.51.0/sam0/drivers/system/clock/clock_samd21_r21_da_ha1
        ../../xdk-asf-3.51.0/sam0/drivers/system/clock/clock_samd21_r21_da_ha1/module_config
        ../../xdk-asf-3.51.0/sam0/drivers/system/interrupt
        ../../xdk-asf-3.51.0/sam0/drivers/system/interrupt/system_interrupt_samd21
        ../../xdk-asf-3.51.0/sam0/drivers/system/pinmux
        ../../xdk-asf-3.51.0/sam0/drivers/system/power/power_sam_d_r_h
        ../../xdk-asf-3.51.0/sam0/drivers/system/reset/reset_sam_d_r_h
        ../../xdk-asf-3.51.0/sam0/utils
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/include
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/include/component
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/include/instance
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/include/pio
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/source
        ../../xdk-asf-3.51.0/sam0/utils/header_files
        ../../xdk-asf-3.51.0/sam0/utils/preprocessor
        ../../xdk-asf-3.51.0/thirdparty/CMSIS/Include
        ../../xdk-asf-3.51.0/thirdparty/CMSIS/Lib/GCC 
)

set(DEFINES 
        -D__SAMD21G18A__
        -DBOARD=ADAFRUIT_FEATHER_M0_PROTO
        -DSYSTICK_MODE
)

set(CPU_FLAGS
        -mcpu=cortex-m0plus
)

set(FPU_FLAGS 
        -mfloat-abi=soft
        -mfpu=auto
)

project(rocketry_proto1)

set(EXECUTABLE rocketry_proto1.elf)

add_executable(${EXECUTABLE} ${SOURCES} ${ASSEMBLY_FILES})


target_include_directories(${EXECUTABLE} PRIVATE ${INCLUDE_DIRS})

target_compile_definitions(${EXECUTABLE} PRIVATE ${DEFINES})

target_compile_options(${EXECUTABLE} PRIVATE 
        ${CPU_FLAGS} 
        ${FPU_FLAGS})

target_link_options(${EXECUTABLE} PRIVATE  
        ${CPU_FLAGS} 
        ${FPU_FLAGS} 
        -T ${CMAKE_SOURCE_DIR}/projects/rocketry_proto1/cmsis/samd21g18a_flash.ld)

target_link_libraries(${EXECUTABLE} ${CMAKE_SOURCE_DIR}/xdk-asf-3.51.0/thirdparty/CMSIS/Lib/GCC/libarm_cortexM0l_math.a)

#Optional: Print executable size as part of the post build process
#add_custom_command(TARGET ${EXECUTABLE}
#        POST_BUILD
#        COMMAND ${CMAKE_SIZE_UTIL} ${EXECUTABLE})

# Optional: Create hex, bin and S-Record files after the build
add_custom_command(TARGET ${EXECUTABLE}
        POST_BUILD
        COMMAND ${CMAKE_OBJCOPY} -O srec --srec-len=64 ${EXECUTABLE} ${PROJECT_NAME}.s19
        COMMAND ${CMAKE_OBJCOPY} -O ihex ${EXECUTABLE} ${PROJECT_NAME}.hex
        COMMAND ${CMAKE_OBJCOPY} -O binary ${EXECUTABLE} ${PROJECT_NAME}.bin)