
include(../../tools/cmake_files/gccFlags.cmake)

set(ASSEMBLY_FILES 
)

set(SOURCES 
        ../../projects/blinky/main.cpp
        ../../projects/blinky/cmsis/source/gcc/startup_samd21.c
        ../../projects/blinky/cmsis/source/gcc/system_samd21.c
        
)

set(INCLUDE_DIRS 
        ../../projects/blinky
        ../../projects/blinky/cmsis/include
)

set(DEFINES 
        -D__SAMD21
        -D__SAMD21J18A__
)

set(CPU_FLAGS
        -mcpu=cortex-m0plus
)

set(FPU_FLAGS 
        -mfloat-abi=soft
        -mfpu=auto
)

project(blinky)

set(EXECUTABLE blinky.elf)

add_executable(${EXECUTABLE} ${SOURCES} ${ASSEMBLY_FILES})


target_include_directories(${EXECUTABLE} PRIVATE ${INCLUDE_DIRS})

target_compile_definitions(${EXECUTABLE} PRIVATE ${DEFINES})

target_compile_options(${EXECUTABLE} PRIVATE 
        ${CPU_FLAGS} 
        ${FPU_FLAGS})

target_link_options(${EXECUTABLE} PRIVATE  
        ${CPU_FLAGS} 
        ${FPU_FLAGS} 
        -T ${CMAKE_SOURCE_DIR}/projects/blinky/cmsis/samd21j18a_flash.ld)

target_link_libraries(${EXECUTABLE} ${CMAKE_SOURCE_DIR}/xdk-asf-3.51.0/thirdparty/CMSIS/Lib/GCC/libarm_cortexM0l_math.a)

#Optional: Print executable size as part of the post build process
#add_custom_command(TARGET ${EXECUTABLE}
#        POST_BUILD
#        COMMAND ${CMAKE_SIZE_UTIL} ${EXECUTABLE})

# Optional: Create hex, bin and S-Record files after the build
add_custom_command(TARGET ${EXECUTABLE}
        POST_BUILD
        COMMAND ${CMAKE_OBJCOPY} -O srec --srec-len=64 ${EXECUTABLE} ${PROJECT_NAME}.s19
        COMMAND ${CMAKE_OBJCOPY} -O ihex ${EXECUTABLE} ${PROJECT_NAME}.hex
        COMMAND ${CMAKE_OBJCOPY} -O binary ${EXECUTABLE} ${PROJECT_NAME}.bin)