
include(../../tools/cmake_files/gccFlags.cmake)

set(ASSEMBLY_FILES 
        ../../tools/SEGGER_RTT_V754b/RTT/SEGGER_RTT_ASM_ARMv7M.S
)

set(SOURCES 
        main.c
        ../../tools/SEGGER_RTT_V754b/RTT/SEGGER_RTT_printf.c
        ../../tools/SEGGER_RTT_V754b/RTT/SEGGER_RTT.c
        ../../tools/SEGGER_RTT_V754b/Syscalls/SEGGER_RTT_Syscalls_GCC.c
        ../../tools/SEGGER_RTT_V754b/Syscalls/SEGGER_RTT_Syscalls_SES.c
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/source/gcc/startup_samd21.c
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/source/system_samd21.c
)

set(INCLUDE_DIRS 
        ../../projects/SeggerRttPrintfTest
        ../../tools/SEGGER_RTT_V754b/Config
        ../../tools/SEGGER_RTT_V754b/RTT
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/include
        ../../xdk-asf-3.51.0/sam0/utils/cmsis/samd21/source
        ../../xdk-asf-3.51.0/thirdparty/CMSIS/Include
        ../../xdk-asf-3.51.0/thirdparty/CMSIS/Lib/GCC  
)

set(DEFINES 
        -D__SAMD21G15B__
)

set(CPU_FLAGS
        -mcpu=cortex-m0plus
)

set(FPU_FLAGS 
        -mfloat-abi=soft
        -mfpu=auto
)

project(SeggerRttPrintfTest)

set(EXECUTABLE SeggerRttPrintfTest.elf)

add_executable(${EXECUTABLE} ${SOURCES} ${ASSEMBLY_FILES})


target_include_directories(${EXECUTABLE} PRIVATE ${INCLUDE_DIRS})

target_compile_definitions(${EXECUTABLE} PRIVATE ${DEFINES})

target_compile_options(${EXECUTABLE} PRIVATE 
        ${CPU_FLAGS} 
        ${FPU_FLAGS})

target_link_options(${EXECUTABLE} PRIVATE  
        ${CPU_FLAGS} 
        ${FPU_FLAGS} 
        -T ${CMAKE_SOURCE_DIR}/xdk-asf-3.51.0/sam0/utils/linker_scripts/samd10/gcc/samd10c14a_flash.ld)

target_link_libraries(${EXECUTABLE} ${CMAKE_SOURCE_DIR}/xdk-asf-3.51.0/thirdparty/CMSIS/Lib/GCC/libarm_cortexM0l_math.a)

#Optional: Print executable size as part of the post build process
#add_custom_command(TARGET ${EXECUTABLE}
#        POST_BUILD
#        COMMAND ${CMAKE_SIZE_UTIL} ${EXECUTABLE})

# Optional: Create hex, bin and S-Record files after the build
add_custom_command(TARGET ${EXECUTABLE}
        POST_BUILD
        COMMAND ${CMAKE_OBJCOPY} -O srec --srec-len=64 ${EXECUTABLE} ${PROJECT_NAME}.s19
        COMMAND ${CMAKE_OBJCOPY} -O ihex ${EXECUTABLE} ${PROJECT_NAME}.hex
        COMMAND ${CMAKE_OBJCOPY} -O binary ${EXECUTABLE} ${PROJECT_NAME}.bin)